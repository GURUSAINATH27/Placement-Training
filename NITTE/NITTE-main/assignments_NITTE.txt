H/W for 10thJune24
Write a program to generate the following pattern of numbers

1
22
333
4444

Classwork:
Suppose list is 
lstElements = [10,10.00,'hello',(1,2,3),20,(3,4,5)]
write a program using list comprehension and isinstance()
to generate a list of only tuples from the above lstElements.
O/P=>lstTuples = [(1,2,3),(3,4,5)]

Emp Class:
attributes:
  - empname - string
  - empno   - string
  - Mobile Number - string
  - Nationality - string
  - Gender - string
Method:
   insert_emp_data ()=> inserts  into txt file alll this data
Mandatory: doc string!!

Foreign_Emp class
Attributes:-
 Inherit all from parent class Emp
Methods:-
does_have_criminal_rec()

criminal_recs.py
{
  'F009875':'Y',
   'F009876',:'N'
}


Program Statement:
'''
    Given an integer array(0-based indexing) a of size n. Your task is to
    return the maximum value of the sum of i*a[i] for all 0<= i <=n-1,
    where a[i] is the element at index i in the array.
    The only operation allowed is to rotate(clockwise or counterclockwise)
    the array any number of times.

Example 1:

Input: n = 4, a[] = {8, 3, 1, 2}
Output: 29
Explanation: All the configurations possible by rotating the elements are:
3 1 2 8 here sum is 3*0+1*1+2*2+8*3 = 29
1 2 8 3 here sum is 1*0+2*1+8*2+3*3 = 27
2 8 3 1 here sum is 2*0+8*1+3*2+1*3 = 17
8 3 1 2 here sum is 8*0+3*1+1*2+2*3 = 11, so the maximum sum will be 29.
Example 2:

Input: n = 3, a[] = {1, 2, 3}
Output: 8
Explanation: All the configurations possible by rotating the elements are:
1 2 3 here sum is 1*0+2*1+3*2 = 8
3 1 2 here sum is 3*0+1*1+2*2 = 5
2 3 1 here sum is 2*0+3*1+1*2 = 5, so the maximum sum will be 8.

Expected Time Complexity: O(n).
Expected Auxiliary Space: O(1).

Constraints:
1<=n<=105
1<=a[]<=106

Try without and with Time complexity
'''
  - KYC - string
  - specialisation - list of strings


